{"version":3,"sources":["Components/Container/index.js","Components/DatePicker/index.js","Components/CategoryInput/index.js","Components/Button/index.js","Pages/Home.js","Components/Nav/index.js","Pages/UserPage.js","App.js","registerServiceWorker.js","index.js"],"names":["Container","_ref","children","react_default","a","createElement","className","useStyles","makeStyles","grid","width","MaterialUIPickers","_React$useState","React","useState","Date","_React$useState2","Object","slicedToArray","selectedDate","setSelectedDate","classes","handleDateChange","date","material_ui_pickers_esm","utils","DateFnsUtils","Grid","container","justify","margin","id","label","value","onChange","KeyboardButtonProps","aria-label","categories","theme","display","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","OutlinedTextFields","name","Category","values","setValues","noValidate","autoComplete","TextField","select","event","objectSpread","defineProperty","target","SelectProps","MenuProps","helperText","variant","map","option","MenuItem","key","padding","extendedIcon","SearcButton","Fab","color","Search_default","Home","state","eventSearched","handleInputChange","_event$target","_this","setState","console","log","Components_Container","this","placeholder","type","fullWidth","style","InputLabelProps","shrink","Component","Nav","lib","brand","alignLinks","sidenav","react_router_dom","to","window","location","pathname","href","UserPage","App","Components_Nav","react_router","exact","path","component","Pages_Home","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6a32ba00.chunk.js","sourcesContent":["import React from \"react\"\n\n\n\nfunction Container({ children }) {\n    return (\n        <div>\n            <div className=\"container\">\n        \n\n\n                {children}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Container","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst useStyles = makeStyles({\n  grid: {\n    width: '60%',\n  },\n});\n\nexport default function MaterialUIPickers() {\n  // The first commit of Material-UI\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n  const classes = useStyles();\n\n  function handleDateChange(date) {\n    setSelectedDate(date);\n  }\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container className={classes.grid} justify=\"space-around\">\n        <KeyboardDatePicker\n          margin=\"normal\"\n          id=\"mui-pickers-date\"\n          label=\"Date\"\n          value={selectedDate}\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        <KeyboardTimePicker\n          margin=\"normal\"\n          id=\"mui-pickers-time\"\n          label=\"Time\"\n          value={selectedDate}\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change time',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst categories = [\n  {\n    value: 'dining',\n    label: 'dining',\n  },\n  {\n    value: 'music',\n    label: 'music',\n  },\n  {\n    value: 'arts & entertainment',\n    label: 'arts & entertainment',\n  },\n  {\n    value: 'ooutdoor activities',\n    label: 'outdoor activites',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function OutlinedTextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    // name: 'HarryPotter',\n    // age: '',\n    // multiline: 'Controlled',\n    Category: 'whoa',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n      \n      <TextField\n        id=\"outlined-select-category\"\n        select\n        label=\"Select\"\n        className={classes.textField}\n        value={values.Category}\n        onChange={handleChange('Category')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select your Category\"\n        margin=\"normal\"\n        variant=\"outlined\"\n      >\n        {categories.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      {/* <TextField\n        id=\"outlined-select-Category-native\"\n        select\n        label=\"Native select\"\n        \n        className={classes.textField}\n        value={values.Category}\n        onChange={handleChange('Category')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select your Category\"\n        margin=\"normal\"\n        variant=\"outlined\"\n      >\n        {categories.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id=\"outlined-full-width\"\n        label=\"Label\"\n        style={{ margin: 8 }}\n        placeholder=\"Placeholder\"\n        helperText=\"Full width!\"\n        fullWidth\n        margin=\"normal\"\n        variant=\"outlined\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id=\"outlined-bare\"\n        className={classes.textField}\n        defaultValue=\"Bare\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        inputProps={{ 'aria-label': 'bare' }}\n      /> */}\n    </form>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport Icon from '@material-ui/core/Icon'\nimport IconButton from '@material-ui/core/IconButton';\nimport Search from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(10),\n    padding: theme.spacing(0,4)\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function SearcButton() {\n  const classes = useStyles();\n\n  return (\n    \n      <div>\n        \n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"Add\" className={classes.margin}>\n          <Search className={classes.extendedIcon} />\n          Search\n        </Fab>\n      </div>\n      \n   \n  );\n}","import React, { Component } from \"react\"\nimport Container from '../Components/Container'\n// import InputBox from '../Components/InputBox'\n// import Nav from '../Components/Nav'\nimport TextField from '@material-ui/core/TextField';\nimport DatePicker from '../Components/DatePicker'\nimport CategoryInput from \"../Components/CategoryInput\"\nimport SearchButton from \"../Components/Button\"\n\n\nclass Home extends Component {\n\n    state = {\n        eventSearched: \"\",\n        selectedDate: \"\"\n    }\n\n\n    handleInputChange = event => {\n\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n\n    };\n\n    // const[selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n\n handleDateChange= (date)=> {\n    console.log(\"in handledatechaNGE\");\n}\n\n\n//this is going to need a get all saved events function\n\n\nrender() {\n    return (\n        \n\n            <Container>\n                <h1>Search Upcoming Events</h1>\n\n\n                <TextField\n                    name=\"eventSearched\"\n                    value={this.state.eventSearched}\n                    placeholder=\"  i.e. outdoor concerts, roll-outs\"\n                    onChange={this.handleInputChange}\n                    type=\"text\"\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    style={{ margin: 8 }}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n\n                    \n\n                //  label=\"eventSearch\"\n                />\n                <DatePicker/>\n                <CategoryInput/>\n                <SearchButton/>\n            \n                {/* \nTHIS IS THE SIGN!!!!!!!!!!! */}\n\n            </Container >\n\n   \n\n    )\n}\n\n}\n\n\n\n\nexport default Home","import React from \"react\"\nimport { Navbar, NavItem, } from 'react-materialize'\nimport { Link } from \"react-router-dom\"\n\nfunction Nav() {\n    return (\n\n        <Navbar brand={<a />} alignLinks=\"right\" className=\"blue \" sidenav={<li />}>\n\n\n            <Link\n                to=\"/myaccount\"\n                className={window.location.pathname === \"/about\" ? \"nav-link active\" : \"nav-link\"}\n            >\n                <NavItem href=\"\">\n                    My Account\n            </NavItem>\n\n            </Link>\n            <NavItem href=\"components.html\">\n                Saved Events\n        </NavItem>\n        </Navbar>\n\n\n    )\n\n}\n\nexport default Nav","import React, { Component } from \"react\";\n// import TextField from '@material-ui/core/TextField'\n\n\nclass UserPage extends Component{\n\n\n\n\n\n    render(){\n        return(\n            <div>\n\n            <h2> this is the user home page</h2>\n            <h2> this page needs to: </h2>\n            <ul>\n                <li>show saved events</li>\n                <li>allow the user to post events</li>\n                <li>search events?</li>\n            </ul>\n            </div>\n        )\n\n\n\n    }\n}\n\nexport default UserPage\n\n","import React, { Component } from \"react\";\nimport Home from \"./Pages/Home\"\nimport Nav from \"./Components/Nav\"\nimport \"./App.css\";\n\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport UserPage from \"./Pages/UserPage\";\n\nclass App extends Component {\n  render() {\n    return (\n    <Router>\n      <div>\n        <Nav/>\n        <Switch>\n\n      \n      <Route exact path=\"/\" component={Home} /> \n      <Route exact path=\"/myaccount\" component={UserPage} /> \n     \n      <Home/>\n\n      </Switch>\n      </div>\n    </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}